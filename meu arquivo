
//Opefun main() {
    //Tipos de variáveis: desafio p/ casa - NÃO É OBRIGATÓRIO!!!(OPCIONAL)
    //
    //String -armazenar valores de tipo texto - dentro de "" --> ex: "abóbora"
    //Int -armazena números inteiros --> 7042
    //Float - armazena números reais (no geral) -necessita de um f no valor -->72.24f
    //Double - armazena números quebrados (de forma arredondada) -->7.45
    //Long - armazena números longos -->5545664845489
    //Boolean - verdadeiro ou falso --> true,false
    /*
    var cr7 = "cristiano Ronaldo"
    var champion = 5
    var Altura = 1.87

   //Concatenação
   
  print ("o nome dele é" + cr7 + " ele tem" + champion)
  println ("titulos de Champions League e ele tem" + Altura +"de altura SIUUU")
  
  var LaPulga = "Lionel Messi"
  var champions = 4
  var alturadele = 1.02
    
 print ("o nome dele é $LaPulga,ele tem $champions titulos de champions,e ele tem apenas $alturadele de altura")
*/
    
    /*
    var camis = "Camila Silva"
    var idade = 17
    var altura = 1.58
    var sonhos = 80.00f
    var artistas = 1025849
    
    
    
    
    
    println ("meu nome é" +camis+ " eu tenho " + idade)
  println (" e tenho" + altura +"de altura")
  println ("possuo essa quantidade de" +sonhos+ "sonhos" )
  println ("e gosto no total de" +artistas+ "artistas")
*/



// Operadores matemáticos
// + => adição
// - => subtração
// / => divisão
// * => multiplicação
// % => módulo
// 
//println(47 + 8)
//
//Operadores Relacionais
//
//
// == => igual a...
//!= =>  diferente de...
//>=> maior que...
//<=> menor que...
//>= -> maior ou igual a...
//<= -> menor ou igual a...








}
  //Condições
    //
    //condição simples
    //
    // if --> se...
    // else ---> senão...
    /*
    var LembreiDoChocolate = "sim"
    
    if(LembreiDoChocolate == "sim"){
        println("vou entregar o chocolate para você")
     }else{
        println("chocolate pra todo mundo")
	}



  var VouAoParque = ""
    
    if(VouAoParque == "sim"){
        println("vou ir ao parque com você")
    }else{
        println("irei ao parque com ninguém")
	}
    */
  //
 //
//Condições compostas
 /*
 var corações = 5
    
 if(corações == 5){
     println ("Você está ótimo!! Bom pra você")
}else if(corações == 4){
    println("Cê tá bem")
}else if(corações == 3){
    println("vc tá ok, pode cumer miojo")
}else if(corações == 2){
    println("vc não está muito bem!! se cuida!culpa do miojo")
}else if(corações == 1){
    println("Você está morrendeo, você tem direito a um advogado e a uma ligação")
}else{
    println("Tu tá morto :),novo reforço do Vascao")
}
*/

    
var idade = 3
 
if(idade <= 3){
    println("Você é um nenê")
}else if(idade <= 12){
    println("Você é muito infantil!!")
}else if(idade <= 18){
    println("Tu é jovem! aproveite sua vida")
}else if(idade <= 60){
    println("Tu é adulto!! Pague a conta")
}else if(idade > 60){
    println("Que que há velhinho?")
}else{
    println("você não existe!!!")
     
//Condições
    //
    //condição simples
    //
    // if --> se...
    // else ---> senão...
    /*
    var LembreiDoChocolate = "sim"
    
    if(LembreiDoChocolate == "sim"){
        println("vou entregar o chocolate para você")
     }else{
        println("chocolate pra todo mundo")
	}



  var VouAoParque = ""
    
    if(VouAoParque == "sim"){
        println("vou ir ao parque com você")
    }else{
        println("irei ao parque com ninguém")
	}
    */
  //
 //
//Condições compostas
 /*
 var corações = 5
    
 if(corações == 5){
     println ("Você está ótimo!! Bom pra você")
}else if(corações == 4){
    println("Cê tá bem")
}else if(corações == 3){
    println("vc tá ok, pode cumer miojo")
}else if(corações == 2){
    println("vc não está muito bem!! se cuida!culpa do miojo")
}else if(corações == 1){
    println("Você está morrendeo, você tem direito a um advogado e a uma ligação")
}else{
    println("Tu tá morto :),novo reforço do Vascao")
}
*/

    
var idade = 3
 
if(idade <= 3){
    println("Você é um nenê")
}else if(idade <= 12){
    println("Você é muito infantil!!")
}else if(idade <= 18){
    println("Tu é jovem! aproveite sua vida")
}else if(idade <= 60){
    println("Tu é adulto!! Pague a conta")
}else if(idade > 60){
    println("Que que há velhinho?")
}else{
    println("você não existe!!!")
    
    Operadores Lógicos
    //
    //são usados quando queremos comparar mais de uma coisa na mesma condição
    //
   // && -> e (shift + 7)
   // || -> ou(shift + barra invertida)
   // 
   // TABELA VERDADE (com E e OU)
   // 
   // && - a determinada ação só acontecerá se e somente se todas as 
   // condções forem verdadeiras
  // 
  // VV -> Verdadeiro
  // VF -> Falso
  // FV -> Falso
  // FF -> Falso
  // 
  // || - a determinada ação será executada se pelo menos uma das 
  // condições forem verdadeiras
  // 
  // VV -> Verdadeiro
  // VF -> Verdadeiro
  // FV -> Verdadeiro
  // FF -> Falso
  // 
  /*
  var idade = 15
  var acompanhadoDosPais = false
    
    
  if(idade >= 14 || acompanhadoDosPais == true){
      println("Pode entrar, curte ae")
  }else{
      println("a entrada não é permitida para você")  
  }
  */
  //Exercício- A seleção Brasileira está correndo risco de ser eliminado na fase de grupos 
  //da Copa, o Brasil,só pode se classificar se a Alemanha perder e se o próprio Brasil
  //ganhar. As partidas já passaram,quero saber se o Brasil se Classificou ou não
  //
  
                             
  var Alemanhaganhou = false
  var Brasilganhou = true
    
  if(Alemanhaganhou == false && Brasilganhou == true){
      println("Faz a dança do pombo,Brasil é campeão!!")
  }else{
     println("o hexa não veio dessa fez familia =<")
  }
     
  
  
  var Alemanhaperdeu = false
  var BrasilCampeão = false
  
  /*
    val Brasil = true
    val Alemanha = false
    val Marrocos = false
    
    
   if(!Alemanha && Brasil && !Marrocos){
       println("Pode isso Arnaldo, Brasil classificado!!! Rumo ao hexa! Haja coração")
   }else{
       println("Acabooooou,eu só queria dar alegria pro meu povo")
   }
  */
   
   // When - Quando
   // 
   // Quando uma determinada condição for verdadeira, outra determinada  
   // condição será executada
   // 
   // Estrutura do When:
   // 
   // When(var){
   // valor-> ação a ser executada
   // outroValor -> ação
   // maisum -> ação
   // outro-> ação
   // else -> ação
   // }
   // 
   var mes = 7
    
   when(mes){
     1 -> println("Acapuco  - MEX")
     2 -> println("Paris - FRA")
     3 -> println("Berlim - ALE")
     4 -> println("Monaco - MON")
     5 -> println("Pequim - CHI")
     6 -> println("Acre - BRA")
     7 -> println("Roma - ITA")
     8 -> println("Atenas - GRE")
     9 -> println("Madrid - ESP")
    10 -> println("Manchester - ING")
    11 -> println("Dubai - EAU")
    else -> println("São Paulo - BRA")

   }
  
    fun main() {
    // Laços de Repetição
    // 
    // While - enquanto
    // for -para...
    // do..while - faça.. enquanto
    // repeat -repita
    
   
    //Laço While
    //enquanto uma determinada condição for verdadeira,outra determinada
    //ação será executada
    //
    //Estrutura do While
    //
    //While(condição){
    //ação
    // }
    /*
    var idade = 1
    
    while(idade < 17){
        println("$idade anos? cresça,sério")
        idade ++
        
    }
        println("$idade Divirta-se,você chegou até aqui, você merece")
    */
    
    // Laço do.. While
    // 
    // Uma determinada ação será executada, enquanto outra determinada condição
    //  for verdadeira
    //  
    // Estrutura do do..While
    // do{
    //ação
    // } while(condição)
    /*
    
    var idade = 11
   
    do{
      println("$idade anos? cresça, sério") 
      idade++
   }while(idade > 17)
   */
  //Exercício -> O ano não é bissexto. portanto o ano possui 365 dias,precisa ser exbido no console
  //os números de  1 a 365, usando no mínimo uma variável, usando laços While e
  //do..While
  //
  //Divirta-se
        
    var anos = 1
    
    while(anos <366){
        println("$anos não é bissexto")
        anos++
    
    //Laços de repetição
    //While
    //Do..While
    //
    //f or - Par/a..
    //
    //for - para cada item em uma lista ou qualquer tipo de coleçaõ será executado uma 
    //determinada ação
    //
    //Estrutura do for:
    //for (item in list/colection){
    //ação
    //
   //Exercício: faça a tabuada de um número de sua escolha (sem a do 0, a do 1,do 2 e do 10)
   //. Observação: precisa utilizar o laço for
   
   
    var tabuada = ("5 10 15 20 25 30 35 40 45 50")
     for (item in tabuada){
        println(item)
        
         
   //
   //      
   // Repeat - Repita...
   // 
   // Uma determinada ação será repitida um determinado número de vezes 
   // 
     
   
     repeat (10){  
         println("||---------------tartaruga-----------||")
         
     }
        
        fun main() {
    
    //Collections - Coleções 
    //
    // <> --> tags - servem para especificar o tipo de valor a ser listado
    //
    // São determinados conjuntos de itens/valores que podem ser modelados e utilizados
    // em determinados métodos e operações 
    // 
    // List - listas
    // 
    // listOf --> listam itens de variados tipos 
    // 
    
    //var genericList = mutableListOf("São Paulo, arroz e pamonha", 25.7f, 23.974, '$', false) 
    //println(genericList)
    var specificList = listOf<String>("Cruzeiro do Roberto Carlos", "Calleri","5")
    println(specificList)
    
    
// Index - uma posição da collection
 
    //Propriedades - list 
    //
    // .lastIndex 
    // .size 
    // 
    // 
    //println(specificList.lastIndex)
    //println(specificList.first())
   //println(genericList.size) 
   //
   //println(specificList.get(0))
   // println(specificList.indexOf("Cruzeiro do Roberto Carlos"))
    
    
    //Métodos - listOf
    /*
    genericList.add(2, "easy")
    println(genericList)
    genericList.remove(23.974)
    println(genericList) 
    genericList.removeAt(3)
    println(genericList)
    genericList.set(0, "tartaruga")
    println(genericList)
    genericList.clear()
    println(genericList)
    */
    var anotherList = setOf("Pedro", "Diniz", "Pelé", "Ronaldinho", "Marília Mendonza", "Diniz")
    println(anotherList) 
    
    var animal = mutableMapOf("tartaruga" to 0, "jabuti" to 1, "Tucano" to 2, "Hiena" to 3, "Mamaco" to 4)
    println(animal)
    
    
    
    
    
}
//---------------------------------------------------------------------
fun main() {
    //Métodos - listOf
    /*
    genericList.add(2, "easy")
    println(genericList)
    genericList.remove(23.974)
    println(genericList) 
    genericList.removeAt(3)
    println(genericList)
    genericList.set(0, "tartaruga")
    println(genericList)
    genericList.clear()
    println(genericList)
    */
    //var anotherList = setOf("Pedro", "Diniz", "Pelé", "Ronaldinho", "Marília Mendonza", "Diniz")
    //println(anotherList) 
    /*
    var animal = mutableMapOf("tartaruga" to 0, "jabuti" to 1, "Tucano" to 2, "Hiena" to 3, "Mamaco" to 4)
    println(animal) 
    
    animal.put("capivara incrível ☺", 5)
    println(animal) 
    animal.put("leopardo", 9)
    println(animal) 
    animal.replace("Hiena","tatu ",3)
    println(animal)
    */ 
    
    //POO 
    //
    // Programação Orientada a Objetos 
    // 
    // Objetos - estados (características: nome, idade, cpf)
    // 
    // Comportamentos - (andar, comer, dormir, conversar, programar) 
    // 
    // Classes - Modelos que servem para construção de objetos derivados 
    // 
    val pessoa1 = Pessoa()
    pessoa1.nome = "Keyla"
    println(pessoa1.nome)
    pessoa1.cpf = "445.177.465.78"
    println(pessoa1.cpf)
}
 
 class Pessoa(){
     //declaração de atributos para a classe Pessoa
     var nome = ""
     var cpf = ""
     var idade = 99 
     var altura = 1.74 
     
     
 
// Exercício - Faça uma ficha médica, apontando os resultados do último checkup de um paciente
// .Permitido usar a mesma classe Pessoa()

        
        
        
        fun main() {
   
    // Exercício - Faça uma ficha médica, apontando os resultados do último checkup de um paciente
// .Permitido usar a mesma classe Pessoa()

    
         val pessoa1 = Paciente()
    pessoa1.nome = "ludmila"
    println(pessoa1.nome)
    pessoa1.cpf = "445.177.465.78"
    println(pessoa1.cpf)
    pessoa1.idade =19
    println(pessoa1.idade)
    pessoa1.peso = 50
    println(pessoa1.peso)
    pessoa1.altura = 1.65
    println(pessoa1.altura)
    pessoa1.sangue = "AB"
    println(pessoa1.sangue)
    pessoa1.doente = "bronquite"
    println(pessoa1.doente)
    pessoa1.medicamento = "bombinha,inalação,rinosoro"
    println(pessoa1.medicamento)
    
     
     
     
        
        
        
        
}


class Paciente(){
     //declaração de atributos para a classe Pessoa
     var nome = ""
     var cpf = ""
     var idade = 19
     var peso = 50
     var altura = 1.60
     var sangue = "AB"
     var doente = "bronquite"
     var medicamento = "bombinha,inalação,rinosoro"
  
     
     } 
	
        
        
        
     }}
                
    
     
    
    
    
    
    

    
    
  
